{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMeta.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/AuthorMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","DefaultLayout","_ref","bodyClass","isHome","site","allGhostSettings","edges","node","twitterUrl","twitter","replace","facebookUrl","facebook","react_default","Fragment","Helmet_default","lang","className","gatsby_browser_entry","to","logo","src","alt","title","gatsby_image_default","fixed","file","childImageSharp","href","target","rel","config","description","common_Navigation","navigation","navClass","bool","shape","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_2417764204","PostCard","post","url","slug","readingTime","readingTimeHelper","feature_image","style","backgroundImage","tags","lib","visibility","autolink","featured","excerpt","primary_author","profile_image","name","arrayOf","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","label","defaultProps","Layout","common_PostCard","common_Pagination","m","require","default","getAuthorProperties","primaryAuthor","authorProfiles","push","website","_","compact","sameAsArray","length","join","image","fetchAuthorData","ImageMeta","content","property","ArticleMetaGhost","settings","canonical","ghostPost","author","publicTags","tagsHelper","fn","tag","primaryTag","shareImage","get","publisherLogo","resolve","meta_title","meta_description","og_title","og_description","published_at","updated_at","keyword","twitter_title","twitter_description","type","meta_ImageMeta","ArticleMetaQuery","ArticleMeta_ArticleMetaGhost","_1004981455","WebsiteMeta","bio","oneOf","WebsiteMetaQuery","WebsiteMeta_WebsiteMeta","_3093436507","AuthorMeta","AuthorMetaQuery","AuthorMeta_AuthorMeta","_4112685740","MetaData","location","pathname","ghostTag","ghostAuthor","ghostPage","ArticleMeta","meta_WebsiteMeta","meta_AuthorMeta","cover_image","MetaDataQuery","MetaData_MetaData","_2233248733","meta_MetaData","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json"],"mappings":"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","file":"2-60b2a24641f2551bf3d0.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `https://gatsby.ghost.org`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `Ghost Gatsby Starter`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `A starter template to build amazing static websites with Ghost and Gatsby`, // This allows an alternative site description for meta data for pages.\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `Ghost`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A`, // Used for Offline Manifest\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Navigation } from '.'\nimport config from '../../utils/siteConfig'\n\n// Styles\nimport '../../styles/app.css'\n\n/**\n* Main layout component\n*\n* The Layout component wraps around each page and template.\n* It also provides the header, footer as well as the main\n* styles, and meta data for each page.\n*\n*/\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = data.allGhostSettings.edges[0].node\n    const twitterUrl = site.twitter ? `https://twitter.com/${site.twitter.replace(/^@/, ``)}` : null\n    const facebookUrl = site.facebook ? `https://www.facebook.com/${site.facebook.replace(/^\\//, ``)}` : null\n\n    return (\n    <>\n        <Helmet>\n            <html lang={site.lang} />\n            <body className={bodyClass} />\n        </Helmet>\n\n        <div className=\"viewport\">\n\n            <div className=\"viewport-top\">\n                {/* The main header section on top of the screen */}\n                <header className=\"site-head\">\n                    <div className=\"container\">\n                        <div className=\"site-mast\">\n                            <div className=\"site-mast-left\">\n                                <Link to=\"/\">\n                                    {site.logo ?\n                                        <img className=\"site-logo\" src={site.logo} alt={site.title} />\n                                        : <Img fixed={data.file.childImageSharp.fixed} alt={site.title} />\n                                    }\n                                </Link>\n                            </div>\n                            <div className=\"site-mast-right\">\n                                { site.twitter && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\n                                { site.facebook && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\n                            </div>\n                        </div>\n                        { isHome ?\n                            <div className=\"site-banner\">\n                                <h1 className=\"site-banner-title\">{site.title}</h1>\n                                <p className=\"site-banner-desc\">{site.description}</p>\n                            </div> :\n                            null}\n                        <nav className=\"site-nav\">\n                            <div className=\"site-nav-left\">\n                                {/* The navigation items as setup in Ghost */}\n                                <Navigation data={site.navigation} navClass=\"site-nav-item\" />\n                            </div>\n                            <div className=\"site-nav-right\">\n                                <Link className=\"site-nav-button\" to=\"/about\">About</Link>\n                            </div>\n                        </nav>\n                    </div>\n                </header>\n\n                <main className=\"site-main\">\n                    {/* All the main content gets inserted here, index.js, post.js */}\n                    {children}\n                </main>\n\n            </div>\n\n            <div className=\"viewport-bottom\">\n                {/* The footer at the very bottom of the screen */}\n                <footer className=\"site-foot\">\n                    <div className=\"site-foot-nav container\">\n                        <div className=\"site-foot-nav-left\">\n                            <Link to=\"/\">{site.title}</Link> © 2019 &mdash; Published with <a className=\"site-foot-nav-item\" href=\"https://ghost.org\" target=\"_blank\" rel=\"noopener noreferrer\">Ghost</a>\n                        </div>\n                        <div className=\"site-foot-nav-right\">\n                            <Navigation data={site.navigation} navClass=\"site-foot-nav-item\" />\n                        </div>\n                    </div>\n                </footer>\n\n            </div>\n        </div>\n\n    </>\n    )\n}\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool,\n    data: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n}\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n                file(relativePath: {eq: \"ghost-icon.png\"}) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n)\n\nexport default DefaultLayoutSettingsQuery\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { Tags } from '@tryghost/helpers-gatsby'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    const url = `/${post.slug}/`\n    const readingTime = readingTimeHelper(post)\n\n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.feature_image})` ,\n                    }}></div>}\n                {post.tags && <div className=\"post-card-tags\"> <Tags post={post} visibility=\"public\" autolink={false} /></div>}\n                {post.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">{post.title}</h2>\n            </header>\n            <section className=\"post-card-excerpt\">{post.excerpt}</section>\n            <footer className=\"post-card-footer\">\n                <div className=\"post-card-footer-left\">\n                    <div className=\"post-card-avatar\">\n                        {post.primary_author.profile_image ?\n                            <img className=\"author-profile-image\" src={post.primary_author.profile_image} alt={post.primary_author.name}/> :\n                            <img className=\"default-avatar\" src=\"/images/icons/avatar.svg\" alt={post.primary_author.name}/>\n                        }\n                    </div>\n                    <span>{ post.primary_author.name }</span>\n                </div>\n                <div className=\"post-card-footer-right\">\n                    <div>{readingTime}</div>\n                </div>\n            </footer>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        feature_image: PropTypes.string,\n        featured: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n            })\n        ),\n        excerpt: PropTypes.string.isRequired,\n        primary_author: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            profile_image: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n}\n\nexport default PostCard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout'\nexport { default as PostCard } from './PostCard'\nexport { default as Pagination } from './Pagination'\nexport { default as Navigation } from './Navigation'\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor) => {\n    let authorProfiles = []\n\n    authorProfiles.push(\n        primaryAuthor.website ? primaryAuthor.website : null,\n        primaryAuthor.twitter ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/` : null,\n        primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null\n    )\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: primaryAuthor.name || null,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: primaryAuthor.profile_image || null,\n        facebookUrl: primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport config from '../../../utils/siteConfig'\n\nconst ImageMeta = ({ image }) => {\n    if (!image) {\n        return null\n    }\n\n    return (\n        <Helmet>\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:image\" content={image} />\n            <meta property=\"og:image\" content={image} />\n            <meta property=\"og:image:width\" content={config.shareImageWidth} />\n            <meta property=\"og:image:height\" content={config.shareImageHeight} />\n        </Helmet >\n    )\n}\n\nImageMeta.propTypes = {\n    image: PropTypes.string,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport url from 'url'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nconst ArticleMetaGhost = ({ data, settings, canonical }) => {\n    const ghostPost = data\n    settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(ghostPost.primary_author)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || ``\n    const shareImage = ghostPost.feature_image ? ghostPost.feature_image : _.get(settings, `cover_image`, null)\n    const publisherLogo = (settings.logo || config.siteIcon) ? url.resolve(config.siteUrl, (settings.logo || config.siteIcon)) : null\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta property=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                {author.facebookUrl && <meta property=\"article:author\" content={author.facebookUrl} />}\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                {primaryTag && <meta name=\"twitter:label2\" content=\"Filed under\" />}\n                {primaryTag && <meta name=\"twitter:data2\" content={primaryTag} />}\n\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        published_at: PropTypes.string.isRequired,\n        updated_at: PropTypes.string.isRequired,\n        meta_title: PropTypes.string,\n        meta_description: PropTypes.string,\n        primary_author: PropTypes.object.isRequired,\n        feature_image: PropTypes.string,\n        tags: PropTypes.arrayOf(\n            PropTypes.shape({\n                name: PropTypes.string,\n                slug: PropTypes.string,\n                visibility: PropTypes.string,\n            })\n        ),\n        primaryTag: PropTypes.shape({\n            name: PropTypes.string,\n        }),\n        og_title: PropTypes.string,\n        og_description: PropTypes.string,\n        twitter_title: PropTypes.string,\n        twitter_description: PropTypes.string,\n        excerpt: PropTypes.string.isRequired,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nconst ArticleMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsArticleMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <ArticleMetaGhost settings={data} {...props} />}\n    />\n)\n\nexport default ArticleMetaQuery\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nconst WebsiteMeta = ({ data, settings, canonical, title, description, image, type }) => {\n    settings = settings.allGhostSettings.edges[0].node\n\n    const publisherLogo = url.resolve(config.siteUrl, (settings.logo || config.siteIcon))\n    let shareImage = image || data.feature_image || _.get(settings, `cover_image`, null)\n\n    shareImage = shareImage ? url.resolve(config.siteUrl, shareImage) : null\n\n    description = description || data.meta_description || data.description || config.siteDescriptionMeta || settings.description\n    title = `${title || data.meta_title || data.name || data.title} - ${settings.title}`\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"${type}\",\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        feature_image: PropTypes.string,\n        description: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    type: PropTypes.oneOf([`WebSite`, `Series`]).isRequired,\n}\n\nconst WebsiteMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsWebsiteMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <WebsiteMeta settings={data} {...props} />}\n    />\n)\n\nexport default WebsiteMetaQuery\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport ImageMeta from './ImageMeta'\nimport getAuthorProperties from './getAuthorProperties'\nimport config from '../../../utils/siteConfig'\n\nconst AuthorMeta = ({ data, settings, canonical }) => {\n    settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(data)\n    const shareImage = author.image || _.get(settings, `cover_image`, null)\n    const title = `${data.name} - ${settings.title}`\n    const description = data.bio || config.siteDescriptionMeta || settings.description\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={settings.title} />\n                <meta property=\"og:type\" content=\"profile\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Person\",\n                        \"name\": \"${data.name}\",\n                        ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray},` : ``}\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nAuthorMeta.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nconst AuthorMetaQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsAuthorMeta {\n                allGhostSettings {\n                    edges {\n                        node {\n                            ...GhostSettingsFields\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <AuthorMeta settings={data} {...props} />}\n    />\n)\n\nexport default AuthorMetaQuery\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\nimport url from 'url';\n\nimport config from '../../../utils/siteConfig';\nimport ArticleMeta from './ArticleMeta';\nimport WebsiteMeta from './WebsiteMeta';\nimport AuthorMeta from './AuthorMeta';\n\n/**\n * MetaData will generate all relevant meta data information incl.\n * JSON-LD (schema.org), Open Graph (Facebook) and Twitter properties.\n *\n */\nconst MetaData = ({ data, settings, title, description, image, location }) => {\n    const canonical = url.resolve(config.siteUrl, location.pathname, `/`);\n    const { ghostPost, ghostTag, ghostAuthor, ghostPage } = data;\n    settings = settings.allGhostSettings.edges[0].node;\n\n    if (ghostPost) {\n        return <ArticleMeta data={ghostPost} canonical={canonical} />;\n    } else if (ghostTag) {\n        return (\n            <WebsiteMeta data={ghostTag} canonical={canonical} type=\"Series\" />\n        );\n    } else if (ghostAuthor) {\n        return <AuthorMeta data={ghostAuthor} canonical={canonical} />;\n    } else if (ghostPage) {\n        return (\n            <WebsiteMeta\n                data={ghostPage}\n                canonical={canonical}\n                type=\"WebSite\"\n            />\n        );\n    } else {\n        title = title || config.siteTitleMeta || settings.title;\n        description =\n            description || config.siteDescriptionMeta || settings.description;\n        image = image || settings.cover_image || null;\n\n        image = image ? url.resolve(config.siteUrl, image) : null;\n\n        return (\n            <WebsiteMeta\n                data={{}}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image={image}\n                type=\"WebSite\"\n            />\n        );\n    }\n};\n\nMetaData.defaultProps = {\n    data: {}\n};\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.object,\n        ghostTag: PropTypes.object,\n        ghostAuthor: PropTypes.object,\n        ghostPage: PropTypes.object\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired\n    }).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string\n};\n\nconst MetaDataQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettingsMetaData {\n                allGhostSettings {\n                    edges {\n                        node {\n                            title\n                            description\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <MetaData settings={data} {...props} />}\n    />\n);\n\nexport default MetaDataQuery;\n","export { default as MetaData } from './MetaData'\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}