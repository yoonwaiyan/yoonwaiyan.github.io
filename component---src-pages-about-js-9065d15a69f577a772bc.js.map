{"version":3,"file":"component---src-pages-about-js-9065d15a69f577a772bc.js","mappings":"+IAYA,MAAMA,EAAMC,IAAyC,IAADC,EAAAC,EAAAC,EAAA,IAAvC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEC,GAAOP,EAC7C,MAAM,KAAEQ,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAgC,QAApBX,EAAGO,EAAKG,oBAAY,IAAAV,OAAA,EAAjBA,EAAmBM,MAExC,OACEM,EAAAA,cAACC,EAAAA,EAAM,CACLC,eAAgB,CACdV,QAEFE,MAAOA,EACPS,cAAeJ,EAAY,QAAWA,EAAiB,KACvDN,KAAM,CACJ,CACEW,KAAK,cACLC,QAASR,GAEX,CACES,SAAS,WACTD,QAASX,GAEX,CACEY,SAAS,iBACTD,QAASR,GAEX,CACES,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjBhB,EAAAM,EAAKG,oBAAY,IAAAT,GAAQ,QAARC,EAAjBD,EAAmBkB,cAAM,IAAAjB,OAAR,EAAjBA,EAA2BkB,UAAO,IAE7C,CACEJ,KAAK,gBACLC,QAASX,GAEX,CACEU,KAAK,sBACLC,QAASR,IAEXY,OAAOhB,IACT,EAINP,EAAIwB,aAAe,CACjBlB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K,gECpFA,MAAMoB,EAAa,CAAC,gBAAiB,SAE/BC,EAAe,CACnB,SACA,QACA,aACA,MACA,UACA,MACA,UACA,WACA,OACA,QACA,WA4BF,UAzBczB,IAAyB,IAAxB,KAAE0B,EAAI,SAAEC,GAAU3B,EAC/B,MAAM4B,EAAYF,EAAKlB,KAAKG,aAAaJ,MAEzC,OACEM,EAAAA,cAACgB,EAAAA,EAAM,CAACF,SAAUA,EAAUpB,MAAOqB,GACjCf,EAAAA,cAACd,EAAAA,EAAG,CAACQ,MAAM,kBACXM,EAAAA,cAAA,OAAKiB,UAAU,kCACbjB,EAAAA,cAAA,eACEA,EAAAA,cAAA,MAAIiB,UAAU,kCAAiC,iBAC/CjB,EAAAA,cAAA,KAAGiB,UAAU,cAAa,kFAM5BjB,EAAAA,cAAA,WAASiB,UAAU,QACjBjB,EAAAA,cAAA,OAAKiB,UAAU,iCAAgC,UAC/CjB,EAAAA,cAACkB,EAAI,CAACxB,MAAM,aAAayB,KAAMR,IAC/BX,EAAAA,cAACkB,EAAI,CAACxB,MAAM,gBAAgByB,KAAMP,MAG/B,EAMb,MAAMM,EAAOE,IAAsB,IAArB,MAAE1B,EAAK,KAAEyB,GAAMC,EAC3B,OACEpB,EAAAA,cAAA,OAAKiB,UAAU,cACZvB,EAAM,IACPM,EAAAA,cAAA,MAAIiB,UAAU,aACXE,EAAKE,KAAIC,GACRtB,EAAAA,cAAA,MAAIuB,IAAKD,GAAKA,MAGd,C","sources":["webpack://yoonwaiyan/./src/components/seo.js","webpack://yoonwaiyan/./src/pages/about.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst proficient = [\"Ruby on Rails\", \"React\"]\n\nconst activelyUsed = [\n  \"Elixir\",\n  \"MySQL\",\n  \"PostgreSQL\",\n  \"AWS\",\n  \"MongoDB\",\n  \"Git\",\n  \"Webpack\",\n  \"CSS/SASS\",\n  \"SASS\",\n  \"UI/UX\",\n  \"Cypress\",\n]\n\nconst About = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"About Wai Yan\" />\n      <div className=\"mx-auto max-w-prose px-10 py-6\">\n        <section>\n          <h2 className=\"mt-2 prose prose-2xl font-bold\">About Wai Yan</h2>\n          <p className=\"mt-2 prose\">\n            I'm a full-stack software engineer currently based in Kuala Lumpur,\n            Malaysia.\n          </p>\n        </section>\n\n        <section className=\"mt-4\">\n          <div className=\"mt-2 prose prose-xl font-bold\">Skills</div>\n          <List title=\"Proficient\" list={proficient} />\n          <List title=\"Actively Used\" list={activelyUsed} />\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport default About\n\nconst List = ({ title, list }) => {\n  return (\n    <div className=\"mb-4 prose\">\n      {title}:\n      <ul className=\"list-disc\">\n        {list.map(el => (\n          <li key={el}>{el}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["Seo","_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","Helmet","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","proficient","activelyUsed","data","location","siteTitle","Layout","className","List","list","_ref2","map","el","key"],"sourceRoot":""}