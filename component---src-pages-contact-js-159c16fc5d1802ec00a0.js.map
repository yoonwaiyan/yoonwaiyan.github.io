{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","Contact","_ref","location","data","a","createElement","title","site","siteMetadata","method","action","type","name","style","display","value","className","placeholder","required","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","links","url","LinkItem","_ref2","children","react_default","href","marginLeft","Navigation","map","navigation_LinkItem","Layout","render","_this$props","this","props","marginRight","maxWidth","padding","justifyContent","layout_Header","navigation","layout_Footer","Component","Header","marginBottom","marginTop","gatsby_browser_entry","textDecoration","color","to","Footer","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-contact-js-159c16fc5d1802ec00a0.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst Contact = ({ location, data }) => (\n  <Layout location={location} title={data.site.siteMetadata.title}>\n    <SEO title=\"Contact Me\" />\n    <h1>Contact Me</h1>\n    <form method=\"POST\" action=\"https://formspree.io/mail@waiyanyoon.com\">\n      <input type=\"text\" name=\"_gotcha\" style={{ display: 'none' }} />\n      <input type=\"hidden\" name=\"_next\" value=\"//waiyanyoon.com\" />\n\n      <div className=\"field\">\n        <label className=\"label\">Email</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your email\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">Subject</label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            name=\"_subject\"\n            placeholder=\"Your subject\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"field\">\n        <label className=\"label\">Message</label>\n        <div className=\"control\">\n          <textarea\n            required\n            className=\"textarea\"\n            placeholder=\"Your message\"\n            name=\"message\"\n          />\n        </div>\n      </div>\n\n      <div className=\"control\">\n        <button type=\"submit\" className=\"button is-primary\">\n          Submit\n        </button>\n      </div>\n    </form>\n  </Layout>\n)\n\nexport default Contact\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { rhythm } from '../utils/typography'\n\nconst links = [\n  {\n    url: '/about',\n    title: 'About',\n  },\n  {\n    url: 'https://github.com/yoonwaiyan',\n    title: 'Github',\n  },\n  {\n    url: '/contact',\n    title: 'Contact',\n  },\n]\n\nconst Navigation = () => (\n  <nav style={{ display: 'inline-block' }}>\n    {links.map(({ url, title }) => (\n      <LinkItem url={url}>{title}</LinkItem>\n    ))}\n  </nav>\n)\n\nconst LinkItem = ({ url, children }) => (\n  <a href={url} style={{ marginLeft: `${rhythm(1.5)}` }}>\n    {children}\n  </a>\n)\n\nexport default Navigation\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Navigation from '../components/navigation'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Header title={title} />\n          <Navigation />\n        </header>\n        <main>{children}</main>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nconst Header = ({ title }) => (\n  <span\n    style={{\n      marginBottom: rhythm(0.5),\n      marginTop: 0,\n    }}\n  >\n    <Link\n      style={{\n        boxShadow: `none`,\n        textDecoration: `none`,\n        color: `inherit`,\n      }}\n      to={`/`}\n    >\n      {title}\n    </Link>\n  </span>\n)\n\nconst Footer = () => (\n  <footer>\n    © {new Date().getFullYear()}, Built with\n    {` `}\n    <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n  </footer>\n)\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}