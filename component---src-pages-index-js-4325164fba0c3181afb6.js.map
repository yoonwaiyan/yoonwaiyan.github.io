{"version":3,"file":"component---src-pages-index-js-4325164fba0c3181afb6.js","mappings":"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","sources":["webpack://yoonwaiyan/./src/components/bio.js","webpack://yoonwaiyan/./src/components/seo.js","webpack://yoonwaiyan/./src/components/tag.js","webpack://yoonwaiyan/./src/components/BlogPostItem.js","webpack://yoonwaiyan/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  return (\n    <div className=\"flex flex-col mb-10\">\n      {author.name}'s sharing on web development.\n      <a\n        href={`https://twitter.com/${social.twitter}`}\n        className=\"shadow-none hover:underline\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Follow on Twitter\n      </a>\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tag = ({ tag }) => {\n  return (\n    <Link\n      to={`/tags/${tag}`}\n      key={tag}\n      className=\"px-2 py-1 bg-gray-600 text-gray-100 font-bold rounded hover:bg-gray-500 prose-sm\"\n    >\n      {tag}\n    </Link>\n  )\n}\n\nexport default Tag\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Tag from \"./tag\"\n\nconst BlogPostItem = ({ node }) => {\n  const title = node.frontmatter.title || node.fields.slug\n  const tags = node.frontmatter.tags\n\n  return (\n    <div\n      key={node.fields.slug}\n      className=\"mx-auto w-screen xl:w-max max-w-prose px-10 py-6\"\n    >\n      <div className=\"flex flex-col justify-start sm:justify-between sm:flex-row sm:items-center max-w-full\">\n        <span className=\"font-light text-gray-600 dark:text-gray-50\">\n          {node.frontmatter.date}\n        </span>\n        <div className=\"space-x-2 overflow-x-hidden my-2 sm:mt-none break-words\">\n          {tags.map(tag => (\n            <Tag tag={tag} key={tag} />\n          ))}\n        </div>\n      </div>\n      <Link\n        to={node.fields.slug}\n        className=\"mt-2 prose-xl font-bold text-gray-700 dark:text-gray-50 shadow-none no-underline hover:underline\"\n      >\n        {title}\n      </Link>\n      <p\n        className=\"mt-2 prose dark:text-gray-50\"\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BlogPostItem\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport Seo from '../components/seo'\nimport BlogPostItem from '../components/BlogPostItem'\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts === undefined || posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      {posts.map((post) => {\n        return <BlogPostItem node={post} key={post.fields.slug} />\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`{\n  site {\n    siteMetadata {\n      title\n    }\n  }\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    nodes {\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n}`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","href","twitter","target","rel","Seo","_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","title","metaDescription","defaultTitle","Helmet","htmlAttributes","titleTemplate","content","property","concat","defaultProps","tag","Link","to","key","node","frontmatter","fields","slug","tags","date","map","Tag","dangerouslySetInnerHTML","__html","excerpt","location","siteTitle","posts","allMarkdownRemark","nodes","undefined","length","Layout","post","BlogPostItem"],"sourceRoot":""}