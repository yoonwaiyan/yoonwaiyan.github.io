{"version":3,"file":"component---src-pages-index-js-58710ebe74d3ee31bfcd.js","mappings":"uJA6CA,IAnCY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OACvC,OACE,uBAAKC,UAAU,uBACZJ,EAAOK,KADV,iCAEE,qBACEC,KAAI,uBAAyBH,EAAOI,QACpCH,UAAU,8BACVI,OAAO,SACPC,IAAI,cAJN,wB,uDCrBAC,EAAM,SAAC,GAAwC,IAAD,MAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC9Bb,GAASF,EAAAA,EAAAA,gBAAe,cAAxBE,KAgBFc,EAAkBJ,GAAeV,EAAKC,aAAaS,YACnDK,EAAY,UAAGf,EAAKC,oBAAR,aAAG,EAAmBY,MAExC,OACE,gBAAC,IAAD,CACEG,eAAgB,CACdL,KAAAA,GAEFE,MAAOA,EACPI,cAAeF,EAAY,QAAWA,EAAiB,KACvDH,KAAM,CACJ,CACER,KAAK,cACLc,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASL,GAEX,CACEM,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACEd,KAAK,eACLc,QAAQ,WAEV,CACEd,KAAK,kBACLc,SAAS,UAAAlB,EAAKC,oBAAL,mBAAmBC,cAAnB,eAA2BI,UAA3B,IAEX,CACEF,KAAK,gBACLc,QAASL,GAEX,CACET,KAAK,sBACLc,QAASJ,IAEXM,OAAOR,MAKfH,EAAIY,aAAe,CACjBV,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,O,6CC3EA,IAZY,SAAC,GAAa,IAAXY,EAAU,EAAVA,IACb,OACE,gBAAC,EAAAC,KAAD,CACEC,GAAE,SAAWF,EACbG,IAAKH,EACLnB,UAAU,oFAETmB,K,kIC8BP,EAnCqB,SAAC,GAAc,IAAZI,EAAW,EAAXA,KAChBb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,KAE9B,OACE,uBACEL,IAAKC,EAAKE,OAAOC,KACjB1B,UAAU,oDAEV,uBAAKA,UAAU,yFACb,wBAAMA,UAAU,8CACbuB,EAAKC,YAAYI,MAEpB,uBAAK5B,UAAU,2DACZ2B,EAAKE,KAAI,SAAAV,GAAG,OACX,gBAAC,IAAD,CAAKA,IAAKA,EAAKG,IAAKH,SAI1B,gBAAC,EAAAC,KAAD,CACEC,GAAIE,EAAKE,OAAOC,KAChB1B,UAAU,oGAETU,GAEH,qBACEV,UAAU,+BACV8B,wBAAyB,CACvBC,OAAQR,EAAKC,YAAYjB,aAAegB,EAAKS,aCGvD,EA5BkB,SAAC,GAAwB,IAAtBtC,EAAqB,EAArBA,KAAMuC,EAAe,EAAfA,SACnBC,EAAYxC,EAAKG,KAAKC,aAAaY,MACnCyB,EAAQzC,EAAK0C,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAD,CAAQL,SAAUA,EAAUvB,MAAOwB,GACjC,gBAAC,IAAD,CAAKxB,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQuB,SAAUA,EAAUvB,MAAOwB,GACjC,gBAAC,IAAD,CAAKxB,MAAM,cACVyB,EAAMN,KAAI,SAAAU,GACT,OAAO,gBAAC,EAAD,CAAchB,KAAMgB,EAAMjB,IAAKiB,EAAKd,OAAOC","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/components/tag.js","webpack://gatsby-starter-blog/./src/components/BlogPostItem.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  return (\n    <div className=\"flex flex-col mb-10\">\n      {author.name}'s sharing on web development.\n      <a\n        href={`https://twitter.com/${social.twitter}`}\n        className=\"shadow-none hover:underline\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Follow on Twitter\n      </a>\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tag = ({ tag }) => {\n  return (\n    <Link\n      to={`/tags/${tag}`}\n      key={tag}\n      className=\"px-2 py-1 bg-gray-600 text-gray-100 font-bold rounded hover:bg-gray-500 prose-sm\"\n    >\n      {tag}\n    </Link>\n  )\n}\n\nexport default Tag\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Tag from \"./tag\"\n\nconst BlogPostItem = ({ node }) => {\n  const title = node.frontmatter.title || node.fields.slug\n  const tags = node.frontmatter.tags\n\n  return (\n    <div\n      key={node.fields.slug}\n      className=\"mx-auto w-screen xl:w-max max-w-prose px-10 py-6\"\n    >\n      <div className=\"flex flex-col justify-start sm:justify-between sm:flex-row sm:items-center max-w-full\">\n        <span className=\"font-light text-gray-600 dark:text-gray-50\">\n          {node.frontmatter.date}\n        </span>\n        <div className=\"space-x-2 overflow-x-hidden my-2 sm:mt-none break-words\">\n          {tags.map(tag => (\n            <Tag tag={tag} key={tag} />\n          ))}\n        </div>\n      </div>\n      <Link\n        to={node.fields.slug}\n        className=\"mt-2 prose-xl font-bold text-gray-700 dark:text-gray-50 shadow-none no-underline hover:underline\"\n      >\n        {title}\n      </Link>\n      <p\n        className=\"mt-2 prose dark:text-gray-50\"\n        dangerouslySetInnerHTML={{\n          __html: node.frontmatter.description || node.excerpt,\n        }}\n      />\n    </div>\n  )\n}\n\nexport default BlogPostItem\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport BlogPostItem from \"../components/BlogPostItem\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      {posts.map(post => {\n        return <BlogPostItem node={post} key={post.fields.slug} />\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","name","href","twitter","target","rel","Seo","description","lang","meta","title","metaDescription","defaultTitle","htmlAttributes","titleTemplate","content","property","concat","defaultProps","tag","Link","to","key","node","frontmatter","fields","slug","tags","date","map","dangerouslySetInnerHTML","__html","excerpt","location","siteTitle","posts","allMarkdownRemark","nodes","length","post"],"sourceRoot":""}