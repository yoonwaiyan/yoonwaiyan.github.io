{"version":3,"file":"component---src-pages-using-typescript-tsx-69d4e369f1f019adc61e.js","mappings":"gKA6CA,UAhCwDA,IAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACDH,EAAA,OACCI,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAM,mBAAmBH,SAAUA,GACzCC,EAAAA,cAACG,EAAAA,EAAG,CAACD,MAAM,qBACXF,EAAAA,cAAA,UAAI,0CACJA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,YAAa,+DACdA,EAAAA,cAAA,UAAI,eAAgB,wEAGlEA,EAAAA,cAAA,SAAG,4CACwCA,EAAAA,cAAA,UAAI,cAAe,oBACxDA,EAAAA,cAAA,UAAI,cAAe,gBAAaA,EAAAA,cAAA,UAAI,YAAa,UAEvDA,EAAAA,cAAA,SAAG,kCAC8BF,EAAK,uBAAqB,IACxDD,EAAKO,KAAKC,UAAU,KAEvBL,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGM,KAAK,6CAA4C,kCAEhD,KAGNN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,yDC9BX,MAAML,EAAMP,IAAyC,IAADa,EAAAC,EAAAC,EAAA,IAAvC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAEZ,GAAON,EAC7C,MAAM,KAAEQ,IAASW,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBJ,GAAeR,EAAKa,aAAaL,YACnDM,EAAgC,QAApBT,EAAGL,EAAKa,oBAAY,IAAAR,OAAA,EAAjBA,EAAmBP,MAExC,OACEF,EAAAA,cAACmB,EAAAA,EAAM,CACLC,eAAgB,CACdP,QAEFX,MAAOA,EACPmB,cAAeH,EAAY,QAAWA,EAAiB,KACvDJ,KAAM,CACJ,CACEQ,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASrB,GAEX,CACEsB,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,SAA0B,QAAjBb,EAAAN,EAAKa,oBAAY,IAAAP,GAAQ,QAARC,EAAjBD,EAAmBe,cAAM,IAAAd,OAAR,EAAjBA,EAA2Be,UAAO,IAE7C,CACEJ,KAAK,gBACLC,QAASrB,GAEX,CACEoB,KAAK,sBACLC,QAASP,IAEXW,OAAOb,IACT,EAINX,EAAIyB,aAAe,CACjBf,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K","sources":["webpack://yoonwaiyan/./src/pages/using-typescript.tsx","webpack://yoonwaiyan/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <Seo title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <em>.ts/.tsx</em> files for your\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\n      (like gatsby-node.js) currently don't support TypeScript yet.\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["_ref","data","path","location","React","Layout","title","Seo","site","buildTime","href","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","useStaticQuery","metaDescription","siteMetadata","defaultTitle","Helmet","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"sourceRoot":""}