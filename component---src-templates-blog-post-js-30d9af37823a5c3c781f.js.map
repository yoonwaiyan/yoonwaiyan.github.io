{"version":3,"file":"component---src-templates-blog-post-js-30d9af37823a5c3c781f.js","mappings":"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","sources":["webpack://yoonwaiyan/./src/components/bio.js","webpack://yoonwaiyan/./src/components/seo.js","webpack://yoonwaiyan/./src/components/tag.js","webpack://yoonwaiyan/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n  return (\n    <div className=\"flex flex-col mb-10\">\n      {author.name}'s sharing on web development.\n      <a\n        href={`https://twitter.com/${social.twitter}`}\n        className=\"shadow-none hover:underline\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        Follow on Twitter\n      </a>\n    </div>\n  )\n}\n\nexport default Bio\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Tag = ({ tag }) => {\n  return (\n    <Link\n      to={`/tags/${tag}`}\n      key={tag}\n      className=\"px-2 py-1 bg-gray-600 text-gray-100 font-bold rounded hover:bg-gray-500 prose-sm\"\n    >\n      {tag}\n    </Link>\n  )\n}\n\nexport default Tag\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Tag from \"../components/tag\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const tags = post.frontmatter.tags\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"mx-auto w-screen xl:w-max max-w-prose px-10 py-6 break-words\">\n        <div className=\"divide-y-2 divide-solid\">\n          <div className=\"pb-6\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"font-light text-gray-600 dark:text-gray-50\">\n                {post.frontmatter.date}\n              </span>\n            </div>\n\n            <h1 className=\"mt-2 prose prose-2xl font-bold dark:text-gray-50\">\n              {post.frontmatter.title}\n            </h1>\n\n            <div className=\"mt-2 space-x-2\">\n              {tags.map(tag => (\n                <Tag key={tag} tag={tag} />\n              ))}\n            </div>\n\n            <div\n              className=\"prose mt-2 dark:text-gray-50\"\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n          </div>\n          <div className=\"pt-6\">\n            <Bio />\n\n            <ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","href","twitter","target","rel","Seo","_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","lang","meta","title","metaDescription","defaultTitle","Helmet","htmlAttributes","titleTemplate","content","property","concat","defaultProps","tag","Link","to","key","location","post","markdownRemark","siteTitle","tags","frontmatter","previous","next","Layout","excerpt","date","map","Tag","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug"],"sourceRoot":""}