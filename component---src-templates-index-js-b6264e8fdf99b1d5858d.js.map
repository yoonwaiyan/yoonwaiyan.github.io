{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_common__WEBPACK_IMPORTED_MODULE_2__","_components_common_meta__WEBPACK_IMPORTED_MODULE_3__","Index","_ref","data","location","pageContext","posts","allGhostPost","edges","a","createElement","Fragment","isHome","className","map","_ref2","node","console","log","key","id","post","propTypes","PropTypes","shape","object","isRequired","pathname","string"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAeMY,EAAQ,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,YACvBC,EAAQH,EAAKI,aAAaC,MAEhC,OACIb,EAAAc,EAAAC,cAAAf,EAAAc,EAAAE,SAAA,KACIhB,EAAAc,EAAAC,cAACV,EAAA,EAAD,CAAUI,SAAUA,IACpBT,EAAAc,EAAAC,cAACX,EAAA,EAAD,CAAQa,QAAQ,GACZjB,EAAAc,EAAAC,cAAA,OAAKG,UAAU,aACXlB,EAAAc,EAAAC,cAAA,WAASG,UAAU,aACdP,EAAMQ,IACH,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACIC,QAAQC,IAAI,OAAQF,IAEhBrB,EAAAc,EAAAC,cAACX,EAAA,EAAD,CAAUoB,IAAKH,EAAKI,GAAIC,KAAML,OAI9CrB,EAAAc,EAAAC,cAACX,EAAA,EAAD,CAAYM,YAAaA,QAO7CJ,EAAMqB,UAAY,CACdnB,KAAMoB,IAAUC,MAAM,CAClBjB,aAAcgB,IAAUE,OAAOC,aAChCA,WACHtB,SAAUmB,IAAUC,MAAM,CACtBG,SAAUJ,IAAUK,OAAOF,aAC5BA,WACHrB,YAAakB,IAAUE,QAGZxB,YAIR,IAAMR,EAAS","file":"component---src-templates-index-js-b6264e8fdf99b1d5858d.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport { Layout, PostCard, Pagination } from '../components/common';\nimport { MetaData } from '../components/common/meta';\n\n/**\n * Main index page (home page)\n *\n * Loads all posts from Ghost and uses pagination to navigate through them.\n * The number of posts that should appear per page can be setup\n * in /utils/siteConfig.js under `postsPerPage`.\n *\n */\nconst Index = ({ data, location, pageContext }) => {\n    const posts = data.allGhostPost.edges;\n\n    return (\n        <>\n            <MetaData location={location} />\n            <Layout isHome={true}>\n                <div className=\"container\">\n                    <section className=\"post-feed\">\n                        {posts.map(\n                            ({ node }) =>\n                                console.log('node', node) || (\n                                    // The tag below includes the markup for each post - components/common/PostCard.js\n                                    <PostCard key={node.id} post={node} />\n                                )\n                        )}\n                    </section>\n                    <Pagination pageContext={pageContext} />\n                </div>\n            </Layout>\n        </>\n    );\n};\n\nIndex.propTypes = {\n    data: PropTypes.shape({\n        allGhostPost: PropTypes.object.isRequired\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired\n    }).isRequired,\n    pageContext: PropTypes.object\n};\n\nexport default Index;\n\n// This page query loads all posts sorted descending by published date\n// The `limit` and `skip` values are used for pagination\nexport const pageQuery = graphql`\n    query GhostPostQuery($limit: Int!, $skip: Int!) {\n        allGhostPost(\n            sort: { order: DESC, fields: [published_at] }\n            limit: $limit\n            skip: $skip\n        ) {\n            edges {\n                node {\n                    ...GhostPostFields\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}