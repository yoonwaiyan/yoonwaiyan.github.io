{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/tags.js"],"names":["links","url","pageTitle","type","NavLink","item","classes","className","to","href","key","target","rel","Layout","title","children","map","Date","getFullYear","Tags","pageContext","data","location","tag","allMarkdownRemark","edges","totalCount","siteTitle","site","siteMetadata","tagHeader","node","slug","fields","frontmatter"],"mappings":"4FAAA,qCAGMA,EAAQ,CACZ,CACEC,IAAK,SACLC,UAAW,QACXC,KAAM,YAER,CACEF,IAAK,WACLC,UAAW,UACXC,KAAM,YAER,CACEF,IAAK,gCACLC,UAAW,SACXC,KAAM,aA2BJC,EAAU,SAAC,GAAwC,IAAD,IAArCC,KAAQJ,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,UACxBI,EAAU,8BAChB,MAAa,aAFyC,EAAbH,KAIrC,kBAAC,OAAD,CAAMI,UAAWD,EAASE,GAAIP,GAC3BC,GAKH,uBACEO,KAAMR,EACNS,IAAKT,EACLM,UAAWD,EACXK,OAAO,SACPC,IAAI,cAEHV,IAMMW,IA9CA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvB,OACE,oCACE,yBAAKR,UAAU,iGACb,kBAAC,OAAD,CAAMA,UAAU,iCAAiCC,GAAE,KAChDM,GAEH,yBAAKP,UAAU,2GACZP,EAAMgB,KAAI,SAAAX,GAAI,OACb,kBAACD,EAAD,CAASC,KAAMA,EAAMK,IAAKL,EAAKJ,WAIrC,0BAAMM,UAAU,6CACbQ,GAEH,4BAAQR,UAAU,yDAAlB,MACK,IAAIU,MAAOC,cADhB,0B,kCCrCN,wDA2DeC,UArDF,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IADwC,EAElBF,EAAKG,kBAA3BC,EAFwC,EAExCA,MAAOC,EAFiC,EAEjCA,WACTC,EAAYN,EAAKO,KAAKC,aAAaf,MACnCgB,EAAeJ,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,kBAAC,IAAD,CAAQD,SAAUA,EAAUR,MAAOa,GACjC,yBAAKpB,UAAU,kCACb,yBAAKA,UAAU,kCAAkCuB,GACjD,wBAAIvB,UAAU,QACXkB,EAAMT,KAAI,YAAe,IAAZe,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAlB,EAAUiB,EAAKG,YAAfpB,MAER,OACE,wBAAIJ,IAAKsB,GACP,kBAAC,OAAD,CAAMxB,GAAIwB,GAAOlB,QAKzB,kBAAC,OAAD,CAAMN,GAAG,SAAT","file":"component---src-templates-tags-js-1b589224f5d60eab1050.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst links = [\n  {\n    url: '/about',\n    pageTitle: 'About',\n    type: 'internal',\n  },\n  {\n    url: '/contact',\n    pageTitle: 'Contact',\n    type: 'internal',\n  },\n  {\n    url: 'https://github.com/yoonwaiyan',\n    pageTitle: 'Github',\n    type: 'external',\n  },\n]\n\nconst Layout = ({ title, children }) => {\n  return (\n    <>\n      <div className=\"container mx-auto max-w-4xl px-10 py-6 flex flex-col sm:flex-row justify-between items-center\">\n        <Link className=\"shadow-none font-bold prose-xl\" to={`/`}>\n          {title}\n        </Link>\n        <nav className=\"space-x-12 main-nav sm:flex mt-12 sm:mt-0 flex-col sm:flex-row items-center relative flex-1 justify-end\">\n          {links.map(item => (\n            <NavLink item={item} key={item.url} />\n          ))}\n        </nav>\n      </div>\n      <main className=\"container flex flex-wrap flex-col mx-auto\">\n        {children}\n      </main>\n      <footer className=\"container flex flex-wrap mx-auto max-w-4xl px-10 py-6\">\n        Â© {new Date().getFullYear()}, Built with Gatsby\n      </footer>\n    </>\n  )\n}\n\nconst NavLink = ({ item: { url, pageTitle, type } }) => {\n  const classes = 'shadow-none hover:underline'\n  if (type === 'internal') {\n    return (\n      <Link className={classes} to={url}>\n        {pageTitle}\n      </Link>\n    )\n  } else {\n    return (\n      <a\n        href={url}\n        key={url}\n        className={classes}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        {pageTitle}\n      </a>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/layout'\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"mx-auto max-w-prose px-10 py-6\">\n        <div className=\"mt-2 prose prose-2xl font-bold\">{tagHeader}</div>\n        <ul className=\"mt-2\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}