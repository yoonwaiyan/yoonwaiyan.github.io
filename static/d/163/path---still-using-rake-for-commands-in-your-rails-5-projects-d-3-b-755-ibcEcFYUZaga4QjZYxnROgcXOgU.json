{"data":{"ghostPost":{"id":"Ghost__Post__5ae07cf41e31635d585d655a","title":"Still Using Rake for Commands in Your Rails 5 Projects?","slug":"still-using-rake-for-commands-in-your-rails-5-projects","featured":false,"feature_image":null,"excerpt":"`rake` commands often cause problems due to different bundler versions. This newer alternate has improved the dev workflow without using `bundle exec`.","custom_excerpt":"`rake` commands often cause problems due to different bundler versions. This newer alternate has improved the dev workflow without using `bundle exec`.","created_at_pretty":"25 April, 2018","published_at_pretty":"09 April, 2018","updated_at_pretty":"25 April, 2018","created_at":"2018-04-25T21:04:52.000+08:00","published_at":"2018-04-09T17:01:00.000+08:00","updated_at":"2018-04-25T21:07:36.000+08:00","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Yoon Wai Yan","slug":"yoonwaiyan","bio":null,"profile_image":"http://waiyanyoon.com/content/images/2018/04/yoonwaiyan-1.jpeg","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Yoon Wai Yan","slug":"yoonwaiyan","bio":null,"profile_image":"http://waiyanyoon.com/content/images/2018/04/yoonwaiyan-1.jpeg","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"rails","slug":"rails","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"rails","slug":"rails","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"While it's programmed in my brain to use rake  commands for migrations and\ntasks, I find it very useful to use rails  command instead of rake  which is\nintroduced since Rails 5 to unify the use of rails commands. Using rake \ncommands in Rails projects normally cause errors because of the bundler version:\n\n$ rake jobs:workoff\nrake aborted!\nGem::LoadError: You have already activated rake 12.3.1, but your Gemfile requires rake 12.3.0. Prepending `bundle exec` to your command may solve this.\n/Users/waiyanyoon/Documents/workspace/project/config/boot.rb:3:in `<top (required)>'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `require_relative'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `<top (required)>'\n/Users/waiyanyoon/Documents/workspace/project/Rakefile:4:in `<top (required)>'\n\nCaused by:\nLoadError: cannot load such file -- bundler/setup\n/Users/waiyanyoon/Documents/workspace/project/config/boot.rb:3:in `<top (required)>'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `require_relative'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `<top (required)>'\n/Users/waiyanyoon/Documents/workspace/project/Rakefile:4:in `<top (required)>'\n(See full trace by running task with --trace)\n\n\nSo now I replaced my rake  commands to use rails  instead for all my commands:\n\n$ rails jobs:workoff\n\n\nNow I can easily prevent the error above.","html":"<p>While it's programmed in my brain to use <code>rake</code> commands for migrations and tasks, I find it very useful to use <code>rails</code> command instead of <code>rake</code> which is introduced since Rails 5 to unify the use of rails commands. Using <code>rake</code> commands in Rails projects normally cause errors because of the bundler version:</p>\n<pre><code class=\"language-shell\">$ rake jobs:workoff\nrake aborted!\nGem::LoadError: You have already activated rake 12.3.1, but your Gemfile requires rake 12.3.0. Prepending `bundle exec` to your command may solve this.\n/Users/waiyanyoon/Documents/workspace/project/config/boot.rb:3:in `&lt;top (required)&gt;'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `require_relative'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `&lt;top (required)&gt;'\n/Users/waiyanyoon/Documents/workspace/project/Rakefile:4:in `&lt;top (required)&gt;'\n\nCaused by:\nLoadError: cannot load such file -- bundler/setup\n/Users/waiyanyoon/Documents/workspace/project/config/boot.rb:3:in `&lt;top (required)&gt;'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `require_relative'\n/Users/waiyanyoon/Documents/workspace/project/config/application.rb:1:in `&lt;top (required)&gt;'\n/Users/waiyanyoon/Documents/workspace/project/Rakefile:4:in `&lt;top (required)&gt;'\n(See full trace by running task with --trace)\n</code></pre>\n<p>So now I replaced my <code>rake</code> commands to use <code>rails</code> instead for all my commands:</p>\n<pre><code class=\"language-shell\">$ rails jobs:workoff\n</code></pre>\n<p>Now I can easily prevent the error above.</p>\n","url":"http://waiyanyoon.com/still-using-rake-for-commands-in-your-rails-5-projects/","uuid":"0a6e3e29-f1e7-4e52-a41f-9efccc959b5c","page":false,"codeinjection_foot":"","codeinjection_head":"","comment_id":"5ae07cf41e31635d585d655a"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"still-using-rake-for-commands-in-your-rails-5-projects"}}